name: Release
on:
  push:
    tags:
      - "v*"
  workflow_run:
    workflows: ["Run Tests"]
    types:
      - completed

permissions:
  contents: write

env:
  artifact_package_name: contracting-marketing-starter

jobs:
  release:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]
        environment: [UAT, PROD]
    steps:
      - uses: actions/checkout@v4
      - name: Download All Artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist
          merge-multiple: true
      - name: Extract pnpm version from package.json
        run: |
          if [ -f package.json ]; then
            echo "package.json found, proceeding to extract pnpm version."
          else
            echo "package.json not found, exiting."
            exit 1
          fi
          PACKAGE_MANAGER=$(jq -r '.packageManager // "pnpm@latest"' package.json)
          PNPM_VERSION=$(echo "$PACKAGE_MANAGER" | sed 's/pnpm@//' || echo "latest")
          echo "PACKAGE_MANAGER=$PACKAGE_MANAGER" >> $GITHUB_ENV
          echo "PNPM_VERSION=$PNPM_VERSION" >> $GITHUB_ENV
          echo "Full packageManager string: $PACKAGE_MANAGER"
          echo "Extracted pnpm version: $PNPM_VERSION"
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: ${{ env.PNPM_VERSION }}
      - name: Setup Node.js with pnpm cache
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "pnpm"
      - name: Save tag as environment variable
        run: echo "TAG_NAME=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
      - name: Store previous tag
        run: echo "PREV_TAG_NAME=$(git describe --abbrev=0 --tags $(git rev-list --tags --skip=1 --max-count=1))" >> $GITHUB_ENV
      - name: Create changelog
        run: |
          echo ${{ env.PREV_TAG_NAME }}..${{ env.TAG_NAME }}
          git log ${{ env.PREV_TAG_NAME }}..${{ env.TAG_NAME }} --pretty=format:"%h %s by %an" > CHANGELOG.md
          ls -l dist/
      - name: Create Release
        run: gh release create ${{ github.ref_name }} dist/*.tar.gz --title "Release ${{ github.ref_name }}" --notes-file CHANGELOG.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
